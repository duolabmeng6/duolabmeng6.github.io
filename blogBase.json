{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "\u591a\u5566b\u68a6\u7684\u535a\u5ba2", "subTitle": "\u8bb0\u5f55\u6280\u672f\u4e0e\u751f\u6d3b", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/ce-shi-yi-xia.html", "labels": ["documentation"], "postTitle": "\u6d4b\u8bd5\u4e00\u4e0b", "postUrl": "post/ce-shi-yi-xia.html", "postSourceUrl": "https://github.com/duolabmeng6/duolabmeng6.github.io/issues/1", "commentNum": 1, "wordCount": 4, "description": "\u770b\u770b\u6548\u679c\u3002", "top": 0, "createdAt": 1719543287, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-06-28", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/streamlit -jian-dan-de-deng-lu-shi-li.html", "labels": ["documentation"], "postTitle": "streamlit \u7b80\u5355\u7684\u767b\u5f55\u4e8b\u4f8b", "postUrl": "post/streamlit%20-jian-dan-de-deng-lu-shi-li.html", "postSourceUrl": "https://github.com/duolabmeng6/duolabmeng6.github.io/issues/2", "commentNum": 0, "wordCount": 3633, "description": "streamlit \u7684cookie\u5e93\u633a\u5751\u7684 \u8fd9\u91cc\u6211\u91cd\u65b0\u5199\u4e86\u4e00\u4efd\u80fd\u7528\u7684 streamlit \u767b\u5f55\u540e\u4fdd\u6301\u767b\u5f55\u72b6\u6001\u7684\u4e8b\u4f8b\r\n\r\n```\r\n# NOTE: This feature uses browser local storage! AKA it stores data on a viewer's\r\n# machine. This may have privacy and compliance implications for your app. Be sure\r\n# to take that into account with any usage.\r\n\r\nimport json\r\nfrom typing import Any\r\nimport uuid\r\nimport streamlit as st\r\n\r\n# Requires `pip install streamlit-js`\r\n# https://github.com/toolittlecakes/streamlit_js\r\nfrom streamlit_js import st_js\r\n\r\nKEY_PREFIX = 'st_localstorage_'\r\n\r\n\r\nclass StLocalStorage:\r\n    '''An Dict-like wrapper around browser local storage.\r\n\r\n    Values are stored JSON encoded.'''\r\n\r\n    def __init__(self):\r\n        # Keep track of a UUID for each key to enable reruns\r\n        if '_ls_unique_keys' not in st.session_state:\r\n            st.session_state['_ls_unique_keys'] = {}\r\n\r\n        # Hide the JS iframes\r\n        self._container = st.container()\r\n        with self._container:\r\n            st.html(''' \r\n                <style>\r\n                    .element-container:has(iframe[height='0']) {\r\n                        display: none;\r\n                    }\r\n                </style>\r\n            ''')\r\n\r\n    def __getitem__(self, key: str) -> Any:\r\n        if key not in st.session_state['_ls_unique_keys']:\r\n            st.session_state['_ls_unique_keys'][key] = str(uuid.uuid4())\r\n        code = f'''\r\n        // The UUID changes on save, which causes this to rerun and update\r\n        console.debug('{st.session_state['_ls_unique_keys'][key]}');\r\n        return JSON.parse(localStorage.getItem('{KEY_PREFIX + key}'));\r\n        '''\r\n        with self._container:\r\n            result = st_js(code, key=st.session_state['_ls_unique_keys'][key])\r\n        if result and result[0]:\r\n            return json.loads(result[0])\r\n        return None\r\n\r\n    def __setitem__(self, key: str, value: Any) -> None:\r\n        value = json.dumps(value, ensure_ascii=False)\r\n        st.session_state['_ls_unique_keys'][key] = str(uuid.uuid4())\r\n        code = f'''\r\n        console.debug('setting {key} to local storage');\r\n        localStorage.setItem('{KEY_PREFIX + key}', JSON.stringify('{value}'));\r\n        '''\r\n        with self._container:\r\n            return st_js(code, key=st.session_state['_ls_unique_keys'][key] + '_set')\r\n\r\n    def __delitem__(self, key: str) -> None:\r\n        st.session_state['_ls_unique_keys'][key] = str(uuid.uuid4())\r\n        code = f'localStorage.removeItem('{KEY_PREFIX + key}');'\r\n        with self._container:\r\n            return st_js(code, key=st.session_state['_ls_unique_keys'][key] + '_del')\r\n\r\n    def __contains__(self, key: str) -> bool:\r\n        return self.__getitem__(key) is not None\r\n\r\n    def get(self, key: str) -> Any:\r\n        try:\r\n            return self.__getitem__(key)\r\n        except:\r\n            return None\r\n\r\n    def set(self, key: str, value: Any) -> None:\r\n        try:\r\n            self.__setitem__(key, value)\r\n        except:\r\n            return None\r\n\r\n```\r\n\r\n```\r\nimport streamlit as st\r\nimport st_local_storage\r\nst_ls = st_local_storage.StLocalStorage()\r\n\r\nlogin = st_ls.get('login')\r\nif login:\r\n    st.markdown(f'### \u6b22\u8fce\u56de\u6765, **{login}**')\r\n    if st.button('\u9000\u51fa\u767b\u5f55'):\r\n        st_ls['login'] = None\r\nelse:\r\n    st.markdown('## \u7528\u6237\u767b\u5f55')\r\n    username = st.text_input('\u7528\u6237\u540d', max_chars=30, placeholder='\u8f93\u5165\u7528\u6237\u540d')\r\n    password = st.text_input('\u5bc6\u7801', type='password', max_chars=30, placeholder='\u8f93\u5165\u5bc6\u7801')\r\n    if st.button('\u767b\u5f55'):\r\n        if username == 'admin' and password == 'admin':\r\n            st_ls.set('login', username)\r\n            st.success('\u767b\u5f55\u6210\u529f\uff01\u6b63\u5728\u8df3\u8f6c...')\r\n        else:\r\n            st.error('\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef')\r\n\r\n```\r\n\u3002", "top": 0, "createdAt": 1721429996, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-20", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "\u591a\u5566b\u68a6\u7684\u535a\u5ba2", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://duolabmeng6.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}